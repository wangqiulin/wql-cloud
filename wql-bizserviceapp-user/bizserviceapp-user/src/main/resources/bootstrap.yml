spring:
  application:
    name: bizserviceapp-user
  profiles:
    active: dev
  kafka:
    # kafka服务器地址(可以多个)
    bootstrap-servers: 192.168.1.90:9092,192.168.1.91:9092,192.168.1.92:9092
    consumer:
      # 指定一个默认的组名
      group-id: kafka2
      # earliest:当各分区下有已提交的offset时，从提交的offset开始消费；无提交的offset时，从头开始消费
      # latest:当各分区下有已提交的offset时，从提交的offset开始消费；无提交的offset时，消费新产生的该分区下的数据
      # none:topic各分区都存在已提交的offset时，从offset后开始消费；只要有一个分区不存在已提交的offset，则抛出异常
      auto-offset-reset: earliest
      # key/value的反序列化
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      # key/value的序列化
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      # 批量抓取
      batch-size: 65536
      # 缓存容量
      buffer-memory: 524288
      # 服务器地址
      bootstrap-servers: 192.168.1.90:9092,192.168.1.91:9092,192.168.1.92:9092
    
server: 
  port: 6001
  
#解决本地多网卡时，注入到eureka时ip变化的问题  
spring.cloud.inetutils.preferred-networks: 192.168.1.

eureka: 
  instance:
    preferIpAddress: true
    instance-id: ${spring.cloud.client.ipAddress}:${server.port}
    lease-renewal-interval-in-seconds: 10  #续约更新时间间隔（默认30秒）
    lease-expiration-duration-in-seconds: 90  #续约到期时间（默认90秒）
  client: 
    registerWithEureka: true
    fetchRegistry: true
    registryFetchIntervalSeconds: 10   # 服务列表缓存更新时间

ribbon: 
  ReadTimeout: 10000  #请求处理的超时时间
  ConnectTimeout: 1000  #请求连接的超时时间

#信号量模式
hystrix:
  command:
    default:
      execution:
        isolation:
          strategy: SEMAPHORE
          thread:
            timeoutInMilliseconds: 5000  #Hystrix的超时时间改为5秒
            
#feign.hystrix.enabled: false 索性禁用feign的hystrix。该做法除非一些特殊场景，不推荐使用
#fegin调用打印日志
logging:
  level:
    com.wql.cloud.client: DEBUG
    io.seata: DEBUG

wql: 
  eureka: 
    username: admin
    password: admin 

feign:
  serviceId: 
    user: bizserviceapp-user
    pay: bizserviceapp-pay
      
---
spring: 
  profiles: dev
#  cloud: 
#    config:
#      discovery:
#        enabled: true
#        serviceId: comapp-config
#      name: bizserviceapp-user
#      profile: dev
#      label: master
  
eureka: 
  client: 
    serviceUrl: 
      defaultZone: http://${wql.eureka.username}:${wql.eureka.password}@192.168.1.92:5000/eureka/

---
spring: 
  profiles: prod
#  cloud: 
#    config:
#      discovery:
#        enabled: true
#        serviceId: comapp-config
#      name: bizserviceapp-user
#      profile: prod
#      label: master
  
eureka: 
  client: 
    serviceUrl: 
      defaultZone: http://${wql.eureka.username}:${wql.eureka.password}@192.168.1.92:5000/eureka/  
